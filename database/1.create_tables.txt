drop database travelagency;
create database travelagency;
use travelagency;

create table branch(
br_code int(11) not null AUTO_INCREMENT,
br_street varchar(30),
br_num int(4),
br_city varchar(30),
primary key (br_code)
);

create table worker(
wrk_AT char(10) not null,
wrk_name varchar(20),
wrk_lname varchar(20),
wrk_salary float(7,2),
wrk_br_code int(11),
primary key (wrk_AT),
constraint WorkerBranchCode 
foreign key (wrk_br_code) REFERENCES branch (br_code) 
on delete cascade on update cascade
);

create table admin(
adm_AT char(10) not null,
adm_type enum('LOGISTICS','ADMINISTRATIVE','ACCOUNTING'),
adm_diploma varchar(200),
primary key (adm_AT),
constraint AdminWorkerAT 
foreign key(adm_AT) references worker(wrk_AT) 
on delete cascade on update cascade
);

create table manages(
mng_adm_AT char(10) not null,
mng_br_code int(11) not null,
primary key (mng_adm_AT, mng_br_code),
constraint ManagesAdminAT 
foreign key(mng_adm_AT) references admin(adm_AT) 
on delete cascade on update cascade,
constraint ManagesBranchCode 
foreign key(mng_br_code) references branch(br_code) 
on delete cascade on update cascade
);

create table phones(
ph_br_code int(11) not null,
ph_number char(10) not null,
primary key (ph_br_code, ph_number),
constraint PhonesBranchCode 
foreign key(ph_br_code) references branch(br_code) 
on delete cascade on update cascade
);

create table driver(
drv_AT char(10) not null,
drv_license enum('A','B','C','D'),
drv_route enum('LOCAL','ABROAD'),
drv_experience tinyint(4),
primary key(drv_AT),
constraint DriverWorkerAT 
foreign key(drv_AT) references worker(wrk_AT) 
on delete cascade on update cascade
);

create table guide(
gui_AT char(10) not null,
gui_cv text,
primary key(gui_AT),
constraint GuideWorkerAT 
foreign key(gui_AT) references worker(wrk_AT) 
on delete cascade on update cascade
);

create table language(
lng_gui_AT char(10),
lng_language varchar(30),
primary key(lng_gui_AT, lng_language),
constraint LanguageGuideAT 
foreign key(lng_gui_AT) references guide(gui_AT) 
on delete cascade on update cascade
);

create table trip(
tr_id int(11) not null AUTO_INCREMENT,
tr_departure datetime,
tr_return datetime,
tr_maxseats tinyint(4),
tr_cost float(7,2),
tr_br_code int(11),
tr_gui_AT char(10),
tr_drv_AT char(10),
primary key(tr_id),
constraint TripBranchCode 
foreign key(tr_br_code) references branch(br_code) 
on delete cascade on update cascade,
constraint TripGuideAT 
foreign key(tr_gui_AT) references guide(gui_AT) 
on delete cascade on update cascade,
constraint TripDriverAT 
foreign key(tr_drv_AT) references driver(drv_AT) 
on delete cascade on update cascade
);

create table event(
ev_tr_id int(11) not null,
ev_start datetime not null,
ev_end datetime,
ev_descr text,
primary key(ev_tr_id, ev_start),
constraint EventTripId 
foreign key(ev_tr_id) references trip(tr_id) 
on delete cascade on update cascade
);

create table destination(
dst_id int(11) not null AUTO_INCREMENT,
dst_name varchar(50),
dst_descr text,
dst_rtype enum('LOCAL','ABROAD'),
dst_language varchar(30),
dst_location int(11),
primary key (dst_id),
constraint DestinationDestinationId 
foreign key(dst_location) references destination(dst_id) 
on delete cascade on update cascade
);

create table travel_to(
to_tr_id int(11) not null,
to_dst_id int(11) not null,
to_arrival datetime,
to_departure datetime,
primary key(to_tr_id,to_dst_id),
constraint Travel_toTripId 
foreign key(to_tr_id) references trip(tr_id) 
on delete cascade on update cascade,
constraint Travel_toDestinationId 
foreign key(to_dst_id) references destination(dst_id) 
on delete cascade on update cascade
);

create table reservation(
res_tr_id int(11) not null,
res_seatnum tinyint(4) not null,
res_name varchar(20),
res_lname varchar(20),
res_isadult enum('ADULT','MINOR'),
primary key(res_tr_id, res_seatnum),
constraint ReservationTripId 
foreign key(res_tr_id) references trip(tr_id) 
on delete cascade on update cascade
);

create table IT(
IT_AT char(10) not null,
password varchar(10) default 'password',
start_date DATE not null,
end_date DATE,
active enum('ACTIVE', 'INACTIVE') default 'INACTIVE',
primary key (IT_AT),
constraint ITWorkerAT 
foreign key(IT_AT) references worker(wrk_AT) 
on delete cascade on update cascade
);

create table offers(
off_id int(11) not null auto_increment,
off_start date,
off_end date,
off_cost int(11),
off_dst_id int(11),
primary key(off_id),
constraint OffersDestinationId 
foreign key(off_dst_id) references destination(dst_id) 
on delete cascade on update cascade
);

create table reservation_offers(
res_off_id int(11) not null auto_increment,
res_off_ln varchar(250),
res_off_fn varchar(250),
res_off_off_id int(11) not null,
res_off_prepay int(11),
primary key(res_off_id),
constraint ResOffersOffersId 
foreign key(res_off_off_id) references offers(off_id) 
on delete cascade on update cascade
);

create table log(
num_of_log int (11) not null auto_increment,
chosentable enum('trip', 'reservation', 'event', 'travel_to', 'destination'),
action_taken enum('insert', 'delete', 'update') NOT NULL,
who char(10) DEFAULT 'unknown',
cur_datetime datetime,
primary key(num_of_log)
);
